openapi: 3.0.0
info:
  version: '1.0'
  title: Murmurations Library API
  description: Draft version of the Library API for the Murmurations Protocol
servers:
  # Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/MurmurationsNetwork/LibraryAPI/1.0
paths:
  # TODO - future release
  # /fields:
  #   get:
  #     summary: Get a list of fields
  #     description: |
  #       Indices and node UIs will need the list of fields in the library in order to validate profiles, and node UIs will need them to build input forms. This endpoint simply returns all of the fields available in the library.

  #       The examples below do not include a full list of properties that might be returned, but they highlight the main properties to expect in field objects.
  #     responses:
  #       200:
  #         description: OK
  #         content:
  #           application/json:
  #             schema:
  #               type: object
  #               properties:
  #                 data:
  #                   $ref: '#/components/schemas/GetFieldsResponse'
  #             example:
  #               data:
  #                 - name: "mission-v1"
  #                   definition:
  #                     title: "Mission Statement"
  #                     description: "A short statement of why the entity exists, what its overall goal is: what kind of product or service it provides, its primary customers or market, and its geographical region of operation."
  #                     type: "string"
  #                     maxLength: 1000
  #                     context: "https://en.wikipedia.org/wiki/Mission_statement"
  #                 - name: "keywords-v1"
  #                   definition:
  #                     title: "Descriptive Keywords"
  #                     description: "The most common keywords used to describe the entity"
  #                     type: "array"
  #                     items:
  #                         type: "string"
  #                     minItems: 1
  #                     maxItems: 50
  #                     uniqueItems: true
  #                     context: "https://schema.org/keywords"
  #       429:
  #         $ref: '#/components/responses/TooManyRequests'
  #       500:
  #         $ref: '#/components/responses/ServerError'
  /schemas:
    get:
      summary: Get a list of schemas
      description: |
        Indices and node UIs will need the list of schemas in the library in order to validate profiles, and node UIs will need them to build input forms and present schemas to users. This endpoint simply returns all of the schemas available in the library.
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/GetSchemasResponse'
              example:
                data:
                  - title: 'Demo Schema'
                    description: 'A demo schema that is to be used only for testing purposes.'
                    name: 'demo-v1.json'
                    version: 1
                    url: 'https://murmurations.network/schemas/demo.html'
        429:
          $ref: '#/components/responses/TooManyRequests'
        500:
          $ref: '#/components/responses/ServerError'
components:
  schemas:
    # TODO - future release
    # GetFieldsResponse:
    #   type: array
    #   items:
    #     type: object
    #     properties:
    #       name:
    #         type: string
    #       definition:
    #         type: object
    #         properties:
    #           title:
    #             type: string
    #           description:
    #             type: string
    #           type:
    #             type: string
    GetSchemasResponse:
      type: object
      required:
        - data
      properties:
        data:
          type: array
          items:
            type: object
            properties:
              title:
                type: string
              description:
                type: string
              name:
                type: string
              version:
                type: integer
              url:
                type: string
            required:
              - title
              - description
              - name
              - version
              - url
    Error:
      type: object
      properties:
        message:
          type: string
      required:
        - message
  responses:
    TooManyRequests:
      description: The request limit for this resource has been reached for the current rate limit window.
      content:
        application/json:
          schema:
            type: object
            properties:
              errors:
                type: array
                items:
                  $ref: '#/components/schemas/Error'
          example:
            errors:
              - message: Rate limit exceeded.
    ServerError:
      description: An unknown internal error occurred.
      content:
        application/json:
          schema:
            type: object
            properties:
              errors:
                type: array
                items:
                  $ref: '#/components/schemas/Error'
          example:
            errors:
              - message: Internal server error triggered.
